// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Integration Tests for models function renders Csharp models 1`] = `
Array [
  <File
    name="UserSignedUp.cs"
  >
    public partial class UserSignedUp
{
  private string? displayName;
  private string? email;
  private Dictionary&lt;string, dynamic&gt;? additionalProperties;

  public string? DisplayName 
  {
    get { return displayName; }
    set { this.displayName = value; }
  }

  public string? Email 
  {
    get { return email; }
    set { this.email = value; }
  }

  public Dictionary&lt;string, dynamic&gt;? AdditionalProperties 
  {
    get { return additionalProperties; }
    set { this.additionalProperties = value; }
  }
}
  </File>,
]
`;

exports[`Integration Tests for models function renders default as Python models 1`] = `
Array [
  <File
    name="UserSignedUp.py"
  >
    class UserSignedUp: 
  def __init__(self, input: Dict):
    if 'display_name' in input:
      self._display_name: str = input['display_name']
    if 'email' in input:
      self._email: str = input['email']
    if 'additional_properties' in input:
      self._additional_properties: dict[str, Any] = input['additional_properties']

  @property
  def display_name(self) -&gt; str:
    return self._display_name
  @display_name.setter
  def display_name(self, display_name: str):
    self._display_name = display_name

  @property
  def email(self) -&gt; str:
    return self._email
  @email.setter
  def email(self, email: str):
    self._email = email

  @property
  def additional_properties(self) -&gt; dict[str, Any]:
    return self._additional_properties
  @additional_properties.setter
  def additional_properties(self, additional_properties: dict[str, Any]):
    self._additional_properties = additional_properties

  </File>,
]
`;
