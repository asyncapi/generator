{% macro initProperties(schema, required=true) %}
  {%- if schema.allOf() | length %}
    {%- for allOfSchema in schema.allOf() %}
    {{initProperties(allOfSchema)}}
    {%- endfor %}
  {%- elif schema.oneOf() | length %}
    oneOf:{{schema.oneOf() | oneOfSchemaType}}
  {%- elif schema.anyOf() | length %}
    {%- for anyOfSchema in schema.anyOf() %}
    {{initProperties(anyOfSchema, false)}}
    {%- endfor %}
  {%- elif schema.uid() | length %}
    {{initProperty(schema.uid(), schema.uid())}}
  {%- endif %}
{% endmacro %}
{% macro setConstructorProperties(schema) %}
  {%- if schema.allOf() | length %}
    {%- for allOfSchema in schema.allOf() %}
    {{setConstructorProperties(allOfSchema)}}
    {%- endfor %}
  {%- elif schema.oneOf() | length %}
    {{setProperty("oneOf")}}
  {%- elif schema.anyOf() | length %}
    {%- for anyOfSchema in schema.anyOf() %}
    {{setConstructorProperties(anyOfSchema)}}
    {%- endfor %}
  {%- elif schema.uid() | length %}
    {{setProperty(schema.uid())}}
  {%- endif %}
{% endmacro %}

{% macro importSchemas(schema) %}
  {%- if schema.allOf() | length %}
    {%- for allOfSchema in schema.allOf() %}
    {{importSchemas(allOfSchema)}}
    {%- endfor %}
  {%- elif schema.oneOf() | length %}
    {{importSchema("OneOf")}}
    {%- for oneOfSchema in schema.oneOf() %}
    {{importSchemas(oneOfSchema)}}
    {%- endfor %}
  {%- elif schema.anyOf() | length %}
    {%- for anyOfSchema in schema.anyOf() %}
    {{importSchemas(anyOfSchema)}}
    {%- endfor %}
  {%- elif schema.uid() | length %}
    {{importSchema(schema.uid())}}
  {%- endif %}
{% endmacro %}
{%- macro initProperty(propertyName, propertyType) %}
    {{propertyName | camelCase}}:{{propertyType | pascalCase}};
{% endmacro %}

{%- macro setProperty(propertyName) %}
    this.{{propertyName | camelCase}} = {{propertyName | camelCase}};
{% endmacro %}

{%- macro importSchema(propertyName) %}
    import * as {{propertyName | pascalCase}} from '../schema/{{propertyName | pascalCase}}';
{% endmacro %}
{{ importSchemas(message.payload()) }}

export default class {{ message.name() }} {
    {{ initProperties(message.payload()) }}

    constructor();
    constructor(
      {{message.payload() | constructurParameters}}
    ){
    {{setConstructorProperties(message.payload())}}
    }

    copyInto(jsonObject: any){
        {%- for propertyName, property in message.payload().properties() %}
        this.{{ propertyName }}=jsonObject.{{ propertyName }};
        {%- endfor %}
    }
}
