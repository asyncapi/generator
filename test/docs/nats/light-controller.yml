asyncapi: '2.0.0'
info:
  title: Streetlights Nats API for lightning controllers
  version: '1.0.0'
  description: |
    The Smartylighting Streetlights API allows you to remotely manage the city lights.

    This is for the lighting controllers, which assumed are multiple instances to ensure availability.

    ### Check out its awesome features:

    * Turn a specific streetlight on/off ðŸŒƒ
    * Dim a specific streetlight ðŸ˜Ž
    * Receive real-time information about environmental lighting conditions ðŸ“ˆ
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0

servers:
  production:
    url: test.nats.org:{port}
    protocol: nats
    description: Test broker
    variables:
      port:
        default: '4444'
    security:
      - apiKey: []
    bindings:
      nats:
        payload: binary

channels:
  smartylighting.streetlights.1.0.event.{streetlightId}.lighting.measured:
    description: Any measured values will be published through this method.
    parameters:
      streetlightId:
        $ref: './components/parameters.yml#/streetlightId'
    publish:
      operationId: publishLightMeasurement
      message:
        $ref: './components/messages.yml#/lightMeasured'
    bindings:
      $ref: './components/channel-bindings.yml#/smartylightingMeasurement'

  smartylighting.streetlights.1.0.action.{streetlightId}.turn.on:
    description: Get notified when a streetlight should be turned on. This should only be handled by 1 subscriber but ensured by request reply.
    parameters:
      streetlightId:
        $ref: './components/parameters.yml#/streetlightId'
    publish:
      operationId: turnOnResponse
      description: The response returned by us to the frontend.
      message:
        $ref: './components/messages.yml#/turnOnOffResponse'
    subscribe:
      operationId: turnOn
      description: The turn on request received from the frontend.
      message:
        $ref: './components/messages.yml#/turnOnOff'
    bindings:
      $ref: './components/channel-bindings.yml#/smartylightingTurnOnReplier'

  smartylighting.streetlights.1.0.action.{streetlightId}.turn.off:
    description: Get notified when a streetlight should be turned off. This should only be handled by 1 subscriber but ensured by request reply.
    parameters:
      streetlightId:
        $ref: './components/parameters.yml#/streetlightId'
    publish:
      operationId: turnOffResponse
      description: The response returned by us to the frontend.
      message:
        $ref: './components/messages.yml#/turnOnOffResponse'
    subscribe:
      operationId: turnOff
      description: The turn off request received from the frontend.
      message:
        $ref: './components/messages.yml#/turnOnOff'
    bindings:
      $ref: './components/channel-bindings.yml#/smartylightingTurnOffReplier'

  smartylighting.streetlights.1.0.action.{streetlightId}.dim:
    description: Get notified when a streetlight should be dimmed. This should only be handled by 1 subscriber but ensured by request reply.
    parameters:
      streetlightId:
        $ref: './components/parameters.yml#/streetlightId'
    publish:
      operationId: dimLightResponse
      description: The response returned by us.
      message:
        $ref: './components/messages.yml#/dimLightResponse'
    subscribe:
      operationId: dimLight
      description: The dim light request received from the frontend.
      message:
        $ref: './components/messages.yml#/dimLight'
    bindings:
      $ref: './components/channel-bindings.yml#/smartylightingDimReplier'

components:
  securitySchemes:
    apiKey:
      type: apiKey
      in: user
      description: Provide your API key as the user and leave the password empty.
