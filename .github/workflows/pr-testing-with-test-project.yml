# This workflow runs the tests in the test projects to make sure the generator works as a library where it is a Node dependency along with the template.
name: Test using test project

on:
  pull_request:
    types: [opened, reopened, synchronize, ready_for_review]

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      should_test: ${{ steps.filter.outputs.modified_files }} # might be able to access this variable ???, not sure about what it returns but check the logs, might do != '' or == 'true' or something like that
    steps:
      - uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # v3 https://github.com/actions/checkout/releases/tag/v3
      - name: Checks paths-filter
        uses: rohansingh/paths-filter@084ca29929a4e7e708a4aa8b790347facfd830c9 # fork with predicate-quantifier fix
        #TODO check if we can switch back to https://github.com/dorny/paths-filter in a month or 2 (today 17.03.2025)
        id: filter
        with:
          predicate-quantifier: 'every'
          filters: |
            modified_files:
              - 'package.json'
              - 'package-lock.json'
              - 'apps/**'
              - 'packages/**'
              - '.github/workflows/**'
              - '!**/*.md'
              - '!docs/**'
              - '!.all-contributorsrc'

      # for tests, will remove later
      - name: Log the modified files output
        run: |
          echo "Modified files:"
          echo "${{ steps.filter.outputs.modified_files }}"  # Log the output of the modified files

      - name: Check if there are modified files and set should_test
        run: |
          if [ -z "${{ steps.filter.outputs.modified_files }}" ]; then
            echo "No files were modified that match the filter."
            echo "should_test=false" >> $GITHUB_ENV
          else
            echo "Modified files found!"
            echo "should_test=true" >> $GITHUB_ENV
          fi

  test:
    needs: changes
    if: ${{ github.event.pull_request.draft == false }}
    name: Test generator as dependency with Node ${{ matrix.node }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: ["18", "20"]
    steps:
      - name: Checkout repository
        uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744
      - name: Determine if tests should run
        id: should_run
        if: >
          needs.changes.outputs.should_test == 'true' &&
          !github.event.pull_request.draft && !(
            (github.actor == 'asyncapi-bot' && (
              startsWith(github.event.pull_request.title, 'ci: update of files from global .github repo') ||
               startsWith(github.event.pull_request.title, 'chore(release):')
            )) ||
            (github.actor == 'asyncapi-bot-eve' && (
              startsWith(github.event.pull_request.title, 'ci: update of files from global .github repo') ||
               startsWith(github.event.pull_request.title, 'chore(release):')
            )) ||
            (github.actor == 'allcontributors[bot]' &&
               startsWith(github.event.pull_request.title, 'docs: add')
            )
          )
        run: echo "shouldrun=true" >> $GITHUB_OUTPUT
        shell: bash
      - if: steps.should_run.outputs.shouldrun == 'true'
        name: Run test
        run: NODE_IMAGE_TAG=${{ matrix.node }} docker compose up --abort-on-container-exit --force-recreate
        working-directory: ./apps/generator/test/test-project
